#pragma once

/* базовый абстрактный класс, так как в нем присутствует хотя бы одная чистая виртуальная функция
Важно!
1) Так как у нас есть виртуальная функция, то и деструктор должен быть виртульным, чтобы не было утечек данных (если выделять
память под объекты классов наследников динамически, то в случае отсутствия виртуального деструктора в базовом классе будет
для каждого класса наследника вызваться деструктор базового класса, что недопустимо. Но если же деструктор в базовом классе
будет виртуальным, то он будет присутствовать в таблице виртульных функций и для каждого класса-наследника деструктор в
таблице виртуальных функций переопределится и вызовется свой собственный деструктор)
2) НЕЛЬЗЯ создавать объекты абстрактных классов! 
3) У чистой виртуальной функции нет реализации*/
class BaseClass
{
protected:
	double first; //первый элемент
	double dif; //постоянная разность (для арифметической) и постоянное отношение (для геометрической).
public: 
	virtual ~BaseClass() {}; //виртуальный деструктор
	virtual void sumProg(int size) = 0; //чистая виртульная функция для вычисления нормы
	virtual void changeData() = 0; //чистая виртульная функция для изменения данных
};

